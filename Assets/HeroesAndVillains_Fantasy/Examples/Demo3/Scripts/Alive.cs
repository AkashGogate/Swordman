// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;

public class Alive : MonoBehaviour {
				
	public int hp = 100;//show in inspector only
	public int HP {
		get { return hp; }
		private set { hp = value; }
	}
	
	public bool IsDead {
		get { return HP <= 0; }
	}

	public Transform[] attackableSpots;

	public Transform GetRandomAttackableSpot() {
		return attackableSpots[ UnityEngine.Random.Range(0, attackableSpots.Length) ];
	}

	public Transform GetClosestAttackableSpot(Vector3 toPosition) {
		float minDistance = -1;
		Transform closestSpot = null;
		foreach (Transform attackableSpot in attackableSpots) {
			float distance = Vector3.Distance(attackableSpot.position, toPosition);
			if ((distance < minDistance) || (minDistance < 0f)) {
				minDistance = distance;
				closestSpot = attackableSpot;
			}
		}
		return closestSpot;
	}

	public void GetHit(Fighter attacker) {
		if (HP > 0) {
			HP -= attacker.damage;
			if (HP > 0) {
				SendMessage("OnGotHit", attacker, SendMessageOptions.DontRequireReceiver);
			} else {
				HP = 0;
				SendMessage("OnDead", SendMessageOptions.DontRequireReceiver);
				StartCoroutine( DestroyCorpseCoroutine() );
			}
		}
	}

	private IEnumerator DestroyCorpseCoroutine() {
		yield return new WaitForSeconds(5f);
		Destroy(gameObject);
	}


}

